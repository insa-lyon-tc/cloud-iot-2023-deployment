---
- name: Create kafka namespace
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: Namespace
    name: kafka

- name: Deploy zookeeper
  block:
    - name: Apply zookeeper headless service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', 'zookeeper-headless-service.yml') | from_yaml }}"

    - name: Apply zookeeper statefulset
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', 'zookeeper-statefulset.yml') | from_yaml }}"

    - name: Wait for all zookeeper pods to be ready
      become: true
      shell: kubectl get statefulset "crs-zookeeper" -n "kafka" -o jsonpath='{.status.readyReplicas}{" "}{.status.replicas}' 2>/dev/null
      register: result
      until: result.stdout.split() | length > 1 and result.stdout.split()[0] == result.stdout.split()[1]
      retries: 60
      delay: 15

- name: Deploy kafka
  block:
    - name: Apply kafka service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', 'kafka-service.yml') | from_yaml }}"

    - name: Apply kafka statefulset
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', 'kafka-statefulset.yml') | from_yaml }}"

    - name: Wait for all kafka pods to be ready
      become: true
      shell: kubectl get statefulset "kafka" -n "kafka" -o jsonpath='{.status.readyReplicas}{" "}{.status.replicas}' 2>/dev/null
      register: result
      until: result.stdout.split() | length > 1 and result.stdout.split()[0] == result.stdout.split()[1]
      retries: 60
      delay: 15

    - name: Wait for Kafka cluster to be up
      pause:
        seconds: 30

    - name: Apply kafka initialization job
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', 'kafka-init-job.yml') | from_yaml }}"
