<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Kafka Image Viewer</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f4f7f6;
      margin: 0;
      padding: 20px;
      color: #333;
    }
    h1 {
      text-align: center;
      color: #2c3e50;
    }
    .images-grid {
      display: flex;
      flex-direction: row; /* 横向布局 */
      justify-content: flex-start; /* 子元素靠左对齐 */
      flex-wrap: wrap; /* 如果屏幕不够宽，允许主题换行 */
      gap: 20px; /* 主题之间的间隙 */
      margin-top: 20px;
    }
    .topic-column {
      flex: 1;
      min-width: 200px; /* 设置最小宽度，确保列不会太窄 */
      margin-bottom: 40px;
    }
    .image-container {
      background-color: #fff;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      border-radius: 8px;
      overflow: hidden;
      margin-bottom: 10px;
      transition: transform .3s ease; /* 平滑变换效果 */
    }
    .image-container:hover {
      transform: translateY(-5px); /* 鼠标悬停时上移 */
      box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* 鼠标悬停时增加阴影 */
    }
    .image-container img {
      width: 100%;
      height: auto;
      display: block;
    }
    .image-index {
      text-align: center;
      margin: 10px 0;
      color: #7f8c8d;
      font-weight: 500;
    }
    .topic-form {
      text-align: center;
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  <h1>Kafka Image Viewer</h1>
  <div class="topic-form">
    <form id="topic-form">
      <% [
        'CIT_CAMERA_1', 'CIT_CAMERA_2', 'CIT_CAMERA_3', 'CIT_CAMERA_4', 'CIT_CAMERA_5',
        'CIT_CAMERA_PROCESSED_1', 'CIT_CAMERA_PROCESSED_2', 'CIT_CAMERA_PROCESSED_3', 'CIT_CAMERA_PROCESSED_4', 'CIT_CAMERA_PROCESSED_5'
      ].forEach(topic => { %>
        <label>
          <input type="checkbox" name="topics" value="<%= topic %>"> <%= topic %>
        </label><br>
      <% }) %>
      <button type="submit">Submit</button>
    </form>
  </div>

  <div class="images-grid">
    <% Object.keys(imagesByTopic).forEach(topic => { %>
      <div class="topic-column">
        <h2><%= topic %></h2>
        <% if (imagesByTopic[topic].length > 0) { %>
          <% imagesByTopic[topic].slice(0, 10).forEach((image, index) => { %>
            <div class="image-container">
              <!-- 使用数组长度减去当前索引来显示序号，使得1为最早到达的图片的序号 -->
              <span class="image-index"><%= imagesByTopic[topic].length - index %>.</span>
              <img src="data:image/png;base64,<%= image %>" alt="Image from <%= topic %>">
            </div>
          <% }) %> 
        <% } else { %>
          <p>Aucune image disponible</p>
        <% } %>
      </div>
    <% }) %>
  </div>



  <script>
    // 轮询逻辑
    let lastCounts = {};
    // 初始化 lastCounts
    <% Object.keys(imagesByTopic).forEach(topic => { %>
      lastCounts['<%= topic %>'] = <%= imagesByTopic[topic].length %>;
    <% }) %>

    function pollForChanges() {
      fetch('/image-count')
        .then(response => response.json())
        .then(counts => {
          let changed = false;
          Object.keys(counts).forEach(topic => {
            // 确保将计数转换为整数进行比较
            const newCount = parseInt(counts[topic], 10);
            const lastCount = parseInt(lastCounts[topic], 10);

            // 添加日志来检查计数是否真的发生了变化
            console.log(`Checking ${topic}: newCount=${newCount}, lastCount=${lastCount}`);

            if (newCount !== lastCount) {
              console.log(`Change detected in ${topic}: ${lastCount} -> ${newCount}`);
              changed = true;
            }
            lastCounts[topic] = newCount;
         });
      if (changed) {
        console.log("Changes detected, reloading page.");
        window.location.reload();
      }
    })
    .catch(error => console.error('Error fetching image counts:', error));
}

    // 每5秒钟执行一次 pollForChanges
    setInterval(pollForChanges, 20000);

    // 表单提交逻辑
    document.getElementById('topic-form').addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(e.target);
      const topics = formData.getAll('topics').join(',');
      window.location.href = `/images?topics=${topics}`;
    });
  </script>
</body>
</html>
